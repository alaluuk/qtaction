name: Windows Release

on:
  push:
    branches:
      - 'master'
      - 'continuous-integration'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
      - 'continuous-integration'

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   5.15.2
  ARTIFACT:     qtaction

jobs:
  build:
    runs-on: windows-2019

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: git fetch --all --tags -f

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version:      ${{ env.QT_VERSION }}
          host:         windows
          target:       desktop
          arch:         win64_msvc2022_64
          dir:          ${{ runner.temp }}
          setup-python: true

      - name: Download JOM
        uses: suisei-cn/actions-download-file@v1
        with:
          url:    http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\

      - name: Unzip JOM
        working-directory: ${{ runner.temp }}
        run: 7z x jom.zip -ojom

      - name: Create build directory
        run: mkdir ${{ runner.temp }}\build

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Build
        working-directory: ${{ runner.temp }}\build
        run: |
         qmake -r ${{ env.SOURCE_DIR }}\qtaction.pro
          mingw32-make -j2
          cd release
          windeployqt qtaction.exe --pdb --release --compiler-runtime
          copy C:\Windows\System32\concrt140.dll .
          copy C:\Windows\System32\vccorlib140.dll .
          copy C:\Windows\System32\msvcp140.dll .
          copy C:\Windows\System32\vcruntime140.dll .
          copy C:\Qt\5.15.2\mingw81_64\bin\Qt5Core.dll .
          copy C:\Qt\5.15.2\mingw81_64\bin\Qt5Gui.dll .
          copy C:\Qt\5.15.2\mingw81_64\bin\Qt5Widgets.dll .
          copy C:\Qt\5.15.2\mingw81_64\bin\Qt5Network.dll .
          copy C:\Qt\5.15.2\mingw81_64\bin\Qt5Qml.dll .
          copy C:\Qt\5.15.2\mingw81_64\bin\Qt5Sql.dll .
          copy C:\Qt\5.15.2\mingw81_64\bin\Qt5PrintSupport.dll .
          copy C:\Qt\5.15.2\mingw81_64\bin\Qt5Svg.dll .
          copy C:\Qt\5.15.2\mingw81_64\bin\Qt5Xml.dll .
          copy C:\Qt\5.15.2\mingw81_64\bin\Qt5OpenGL.dll .
      - name: Zip build
        working-directory: ${{ runner.temp }}
        run: 7z a ${{ env.ARTIFACT }} ${{ runner.temp }}\build\* -r

      - name: Save build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}\${{ env.ARTIFACT }}